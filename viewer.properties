# Network port number to use
network.port = 2012

# Use high quality rendering? (slower)
ui.quality = true

# Use anti-aliasing? (slower)
ui.antialias = true

# This sets the global force of the layout, that is the amount the nodes are moved at each step.
# Be careful, changing this value may lead to very large oscillations in the layout.
layout.force = 0.01

# Integer between 0 and 4. With value 0 the layout is faster but it also can be farther from equilibrium.
# With value 4 the algorithm tries to be as close as possible from equilibrium (the n-tree and
# Barnes-Hut algorithms are disabled), but the computation can take a lot of time
# (the algorithm becomes O(n^2)).
layout.quality = 2

# At which stabilization value the layout stops its computation. The stabilization of a layout is a
# number between 0 and 1. 1 means fully stable, but this value is rare. Therefore one can consider the
# layout is stable at a lower value. The default is 0.9. You can fix it with this attribute. To freeze
# the layout when the stabilization is sufficient to your needs and therefore avoid consuming CPU. 
layout.stabilization-limit = 0.9
